{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "0.9.0.0",
    "parameters": {
        "resourceNameSuffix": {
            "type": "string",
            "metadata": {
                "description": "Unique suffix, such as your initials or Microsoft alias, to use for uniquely naming resources created by this ARM template."
            }
        },
        "clusterLoginUsername": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
            "defaultValue": "Password.1!!",
            "metadata": {
                "description": "(Default value is Password.1!!) The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sshUsername": {
            "type": "string",
            "defaultValue": "remoteuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "defaultValue": "Password.1!!",
            "metadata": {
                "description": "(Default value is Password.1!!) The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "virtualMachineName": {
            "defaultValue": "LabVM",
            "type": "string",
            "metadata": {
                "description": "Name to assign to the lab virtual machine"
            }
        },
        "virtualMachineUsername": {
            "defaultValue": "demouser",
            "type": "string",
            "metadata": {
                "description": "User name used to log into the VM"
            }
        },
        "virtualMachinePassword": {
            "defaultValue": "Password.1!!",
            "type": "securestring",
            "metadata": {
                "description": "(Default value is Password.1!!) The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "mlVirtualMachineName": {
            "defaultValue": "LabMLServer",
            "type": "string",
            "metadata": {
                "description": "Name to assign to the lab Machine Learning Server virtual machine"
            }
        },
        "mlVirtualMachineUsername": {
            "defaultValue": "radmin",
            "type": "string",
            "metadata": {
                "description": "User name used to log into the VM"
            }
        },
        "mlVirtualMachinePassword": {
            "defaultValue": "Password.1!!",
            "type": "securestring",
            "metadata": {
                "description": "(Default value is Password.1!!) The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "databaseName": {
            "defaultValue": "vending",
            "type": "string",
            "metadata": {
                "description": "Name to assign to the SQL database"
            }
        },
        "databaseServerName": {
            "defaultValue": "vendingmachines",
            "type": "string",
            "metadata": {
                "description": "Name to assign to the SQL Server. Name will have resourceSuffix added to it for uniqueness."
            }
        },
        "databaseUsername": {
            "defaultValue": "demouser",
            "type": "string",
            "metadata": {
                "description": "User name used to log into the VM"
            }
        },
        "databasePassword": {
            "defaultValue": "Password.1!!",
            "type": "securestring",
            "metadata": {
                "description": "(Default value is Password.1!!) The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        }
    },
    "variables": {
        "cleanSuffix": "[replace(replace(replace(toLower(parameters('resourceNameSuffix')), '-', ''), '_', ''), '.', '')]",
        "cleanResourceGroupName": "[replace(replace(replace(toLower(resourceGroup().name), '-', ''), '_', ''), '.', '')]",
        "clusterName": "[concat('rcluster', variables('cleanSuffix'))]",
        "clusterKind": "RSERVER",
        "clusterWorkerNodeCount": 2,
        "clusterVersion": "3.6",
        "databaseServerNameUnique": "[concat(parameters('databaseServerName'), variables('cleanSuffix'))]",
        "storageAccountName": "[concat('labstorage', variables('cleanSuffix'))]",
        "storageAccountType": "Standard_LRS",
        "photoStorageAccountName": "[concat('photostorage', variables('cleanSuffix'))]",
        "virtualMachineSize": "Standard_D2s_v3",
        "mlVirtualMachineSize": "Standard_E2s_v3",
        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "networkInterfaceName": "[concat(toLower(parameters('virtualMachineName')), 'nic')]",
        "mlServerNetworkInterfaceName": "[concat(toLower(parameters('mlVirtualMachineName')), 'nic')]",
        "networkSecurityGroupName": "[concat(parameters('virtualMachineName'), '-nsg')]",
        "mlServerNetworkSecurityGroupName": "[concat(parameters('mlVirtualMachineName'), '-nsg')]",
        "diagnosticsStorageAccountName": "[concat(variables('cleanResourceGroupName'), 'diag')]",
        "mlServerDiagnosticsStorageAccountName": "[concat(variables('cleanResourceGroupName'), 'mldiag')]",
        "addressPrefix": "10.0.1.0/24",
        "subnetName": "default",
        "subnetPrefix": "10.0.1.0/24",
        "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-ip')]",
        "mlServerPublicIpAddressName": "[concat(parameters('mlVirtualMachineName'), '-ip')]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "virtualMachineConfigScriptFolder": ".",
        "virtualMachineConfigScriptFileName": "config-labvm.ps1",
        "virtualMachineConfigScriptUrl": "https://raw.githubusercontent.com/Microsoft/MCW-Intelligent-Vending-Machines/master/HOL/deployment-template/config-labvm.ps1"
    },
    "resources": [
        {
            "apiVersion": "2015-03-01-preview",
            "name": "[variables('clusterName')]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "clusterVersion": "[variables('clusterVersion')]",
                "osType": "Linux",
                "tier": "standard",
                "clusterDefinition": {
                    "kind": "[variables('clusterKind')]",
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('clusterLoginUsername')]",
                            "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
                        },
                        "rserver": {
                            "rstudio": true
                        }
                    }
                },
                "storageProfile": {
                    "storageaccounts": [
                        {
                            "name": "[concat(variables('storageAccountName'), '.blob.core.windows.net')]",
                            "isDefault": true,
                            "container": "vendingmachinescluster",
                            "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1]"
                        }
                    ]
                },
                "computeProfile": {
                    "roles": [
                        {
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 2,
                            "hardwareProfile": {
                                "vmSize": "Standard_D12_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUsername')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        },
                        {
                            "name": "workernode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": "[variables('clusterWorkerNodeCount')]",
                            "hardwareProfile": {
                                "vmSize": "Standard_D12_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUsername')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        },
                        {
                            "name": "zookeepernode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 3,
                            "hardwareProfile": {
                                "vmSize": "Medium"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUsername')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        },
                        {
                            "name": "edgenode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 1,
                            "hardwareProfile": {
                                "vmSize": "Standard_D12_V2"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUsername')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('photoStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('virtualMachineUsername')]",
                    "adminPassword": "[parameters('virtualMachinePassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftVisualStudio",
                        "offer": "VisualStudio",
                        "sku": "VS-2017-Comm-Latest-WS2016",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            },
            "resources": [
              {
                "name": "config-labvm",
                "type": "extensions",
                "location": "[resourceGroup().location]",
                "apiVersion": "2017-12-01",
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
                 ],
                "tags": {
                  "displayName": "Configure LabVM Applications"
                },
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.4",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[variables('virtualMachineConfigScriptUrl')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('virtualMachineConfigScriptFolder'), '/', variables('virtualMachineConfigScriptFileName'))]"
                  }
                }
              }
            ]
        },
        {
            "name": "[variables('diagnosticsStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('mlVirtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('mlServerNetworkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('mlServerDiagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('mlVirtualMachineName')]",
                    "adminUsername": "[parameters('mlVirtualMachineUsername')]",
                    "adminPassword": "[parameters('mlVirtualMachinePassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('mlVirtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftRServer",
                        "offer": "MLServer-Ubuntu",
                        "sku": "Enterprise",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('mlServerNetworkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('mlServerDiagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {
            "name": "[variables('mlServerDiagnosticsStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "name": "[variables('mlServerNetworkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('mlServerPublicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('mlServerNetworkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('mlServerPublicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('mlServerNetworkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('mlServerPublicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[variables('mlServerNetworkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Port_12800",
                        "properties": {
                            "priority": 100,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "12800"
                        }
                    },
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('databaseServerNameUnique')]",
            "properties": {
                "administratorLogin": "[parameters('databaseUsername')]",
                "administratorLoginPassword": "[parameters('databasePassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "apiVersion": "2017-10-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('databaseServerNameUnique'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "[parameters('databaseName')]",
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": 268435456000,
                        "sampleName": "",
                        "zoneRedundant": false,
                        "licenseType": ""
                    },
                    "sku": {
                        "name": "P1",
                        "tier": "Premium"
                    },
                    "type": "databases"
                },
                {
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('databaseServerNameUnique'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                }
            ],
            "type": "Microsoft.Sql/servers"
        }
    ]
}